#!/bin/sh

# If the file of the first argument exists, and second argument is a non zero string
if [ -e $1 ¦¦ -z $2 ] ; then
   # Read input parameters -------------------------------------------------
   # Get root of input file by removing its extension
   fn_root=`echo $1 | awk '{split ($1,part,"."); printf "%s",part[1];}'`
   dim=$2
   # if the third parameter is absent, put a default value
   if [ -z "$3" ] ; then
      occupancy_factor=0.8
   else
      # we calculate the parameter value by calling bc program
      occupancy_factor=`echo "scale=4 ; $3/100" | bc -l`
   fi
   # the same operation for fourth parameter
   if [ -z "$4" ] ; then
      probe_radius=1
   else
      probe_radius=$4 
   fi
   # and the same thing for fifth parameter
   if [ -z "$5" ] ; then
      density=1
   else
      density=$5
   fi

   # Use MSMS --------------------------------------------------------------
   # Produce XYZR file for MSMS 
   # MSMS is at http://www.scripps.edu/pub/olson-web/people/sanner/html/msms_home.html
   # -----------------------------------------------------------------------
   echo "Creating coordinates and radii file ..."
   # pdb_to_xyzr of MSMS package that translates a PDB file into
   # a file of coordinates and Van Der Vaals radii of atoms. 
   pdb_to_xyzr $1 > $fn_root".xyzr"
   
   # Produce triangle surface using MSMS program
   echo "Creating triangle surface via MSMS ..."
   msms -if $fn_root".xyzr" -of $fn_root -density $density -probe_radius \
      $probe_radius > /dev/null
   # Delete xyrz file since we are not using it any more
   rm $fn_root".xyzr"
      
   # Center protein -------------------------------------------------------
   # We center protein calculating its mass center (counting mas of every atom
   # as one)
   
   # First we find center
   echo "Centering protein ..."
   awk '{
   	if (FNR>3) 
 		{
                CenterX+=$1;
                CenterY+=$2;
                CenterZ+=$3;
                Atoms+=1;                          
                }
	}
      	END {printf "%s %s %s",CenterX/Atoms,CenterY/Atoms,CenterZ/Atoms;}' \
           $fn_root".vert" > $fn_root".cent"
        
   # Extract components
   CenterX=`awk '{printf $1}'  $fn_root".cent"`
   CenterY=`awk '{printf $2}'  $fn_root".cent"`
   CenterZ=`awk '{printf $3}'  $fn_root".cent"`
   # remove file with the center
   rm $fn_root".cent"
   
   # And move every coordinate, substituting the .vert file
   awk -v CenterX=$CenterX -v CenterY=$CenterY -v CenterZ=$CenterZ '{
   	if (FNR>3) 
 		{
                  printf "%s %s %s\n" ,$1-CenterX, $2-CenterY, $3-CenterZ;                     
                }
	}' $fn_root".vert" > $fn_root".vert_cent"
   mv $fn_root".vert_cent" $fn_root".vert"

   # Compute maximum -------------------------------------------------------
   # In order to take the right coordinates (right ones are those that are inside
   # the dimensions of the volume to generate), we need to scale them. The scaling
   # factor is computed to guarantee that the farthest atom from the centre of the
   # protein is inside the dimensions. The occupancy factor is the quotient 
   # between the farthest distance and the limit of the volume. The limit is the
   # dimension divided by two, to allow negative coordinates.   
   
   echo "Computing farthest atom ..."
   # We compute that using awk program.
   maxi=`awk '{
		dis=$1*$1+$2*$2+$3*$3;                   
		if (dis>maxi)
             		maxi=dis;
	}
      	END {printf sqrt(maxi);}' $fn_root".vert"` 
       
   # awk produces a number with a comma for symbol of decimals. We shift it by a dot 
   # by means of the program sed.  
   maxi=`echo $maxi | sed -e's/,/\./g'`
   
   # then compute and substitute again dot by comma
   scale_factor=`echo "scale=4 ; $occupancy_factor * $dim / 2 / $maxi" | bc -l \
      | sed -e's/\./,/g'`

   # Translate MSMS output to Xmipp ----------------------------------------
   echo "Translating triangle surface to Xmipp format ..."
   # Using awk again, compute the new coordinates having in mind that the three first
   # lines of the .vert file generated by msms are a header to be removed. The sed program
   # is used to replace comma by dot. 
   
   awk -v scale=$scale_factor '{  
          printf "%s %s %s\n" ,$1*scale, $2*scale, $3*scale;
          next;
        }' $fn_root".vert" | sed -e's/,/\./g' > $fn_root".Xvert"
        
   # in the file of faces generated by msms, we take the three first fields, with stand
   # for the indices of the vertes that make up a triangle. The three-line header of the .face file
   # is removed too.
   
   awk '{
    if (FNR>3)
    	printf "tr %s %s %s\n", $1 , $2 ,$3
        }' $fn_root".face" | sed -e's/,/\./g' > $fn_root".Xface"
   rm $fn_root".vert" $fn_root".face"

   # Generate triangle surface ---------------------------------------------
   echo "Generating triangle surface ..."
   # Using the program tri2spi, a volume is generated from the files .Xvert and .Xface
   # This volumen has a 1 in the voxels that made up the triangulated surface of the protein
   
   tri2spi -ivert $fn_root".Xvert" -itri $fn_root".Xface" -o $fn_root".vol" \
      -s $dim $dim $dim -triangles > /dev/null
   rm $fn_root".Xvert" $fn_root".Xface"
      
else
   # Show Usage ------------------------------------------------------------
   # If the user doesn't input the right parameters, a message is produced to teach him / her. 
   echo "Usage: pdb2surface <PDB file> <dim> [<occupancy factor=80%>] " \
        "[<probe radius=1>] [<density=1>]"
fi
