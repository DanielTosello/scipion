#!/bin/bash
#bash rsyncScript command action remoteuser path_askpass

echo "Initializing Rsync Script"

command=$1

case $command in
	testconnection)
		echo "Testing Connection"
		exit $?
		;;
	transfer)

		mode=$2
		remoteuser=$3
		path_askpass=$4
		fileList=$5
		sourcePath=$6
		targetPath=$7
		canRsync=$8
		availableTunnel=$9
		portTunnel=$10
		
		if [ $availableTunnel = "true" ] ; then

            if [ $canRsync = "true" ] && [ $mode = "COPY" ] ; then
                #rsync -e "ssh -C -o StrictHostKeyChecking=no" $sourcePath $remoteuser:$targetPath
                rsync -e "ssh -C -p $portTunnel -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" -a --files-from=$fileList $sourcePath $remoteuser:$targetPath

            elif [ $canRsync = "true" ] && [ $mode = "MOVE" ] ; then
                rsync -e "ssh -C -p $portTunnel -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" --remove-source-files -a --files-from=$fileList $sourcePath $remoteuser:$targetPath

            else
                scp -C -p $portTunnel -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $sourcePath $remoteuser:$targetPath

            fi
        
        else    
		
			if [ $canRsync = "true" ] && [ $mode = "COPY" ]; then
				export SSH_ASKPASS=$path_askpass
				export DISPLAY=:0
				
				rsync -e "ssh -C -o StrictHostKeyChecking=no" -a --files-from=$fileList $sourcePath $remoteuser:$targetPath
				
			elif [ $canRsync = "true" ] && [ $mode = "MOVE" ] ; then
	            rsync -e "ssh -C -o StrictHostKeyChecking=no" --remove-source-files -a --files-from=$fileList $sourcePath $remoteuser:$targetPath
	
	        else
	            scp -C -o StrictHostKeyChecking=no $sourcePath $remoteuser:$targetPath
	
	        fi	
	        
	    fi
	    
	    exit $?
		;;
	*)
		echo "Unknown command"
esac
exit 0
		
	