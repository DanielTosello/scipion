diff -crB dbxml-2.5.16_ORIG/dbxml/configure dbxml-2.5.16_MODIF/dbxml/configure
*** dbxml-2.5.16_ORIG/dbxml/configure	2013-04-03 11:32:18.877138322 +0200
--- dbxml-2.5.16_MODIF/dbxml/configure	2013-04-03 14:14:43.578292662 +0200
***************
*** 2656,2661 ****
--- 2656,2666 ----
  DB_UTIL_PATH="<replace_with:_path_to_db_build>/build_unix"
  
  # Check for a DB install tree
+ #Roberto FIX for OpenSuSE 64bits bug
+ if test `ls "$with_berkeleydb"/lib64/libdb-*.la 2>/dev/null | wc -l` -gt 0; then
+        echo "TESTING1"
+        ln -s "$with_berkeleydb"/lib64 "$with_berkeleydb"/lib
+ fi
  if test `ls "$with_berkeleydb"/lib/libdb-*.la 2>/dev/null | wc -l` -gt 0 ; then
     	{ echo "$as_me:$LINENO: checking for Berkeley DB version from install tree" >&5
  echo $ECHO_N "checking for Berkeley DB version from install tree... $ECHO_C" >&6; }
diff -crB dbxml-2.5.16_ORIG/xqilla/include/xqilla/framework/XPath2MemoryManager.hpp dbxml-2.5.16_MODIF/xqilla/include/xqilla/framework/XPath2MemoryManager.hpp
*** dbxml-2.5.16_ORIG/xqilla/include/xqilla/framework/XPath2MemoryManager.hpp	2013-04-03 11:32:18.744138320 +0200
--- dbxml-2.5.16_MODIF/xqilla/include/xqilla/framework/XPath2MemoryManager.hpp	2013-04-03 11:33:39.800139604 +0200
***************
*** 23,28 ****
--- 23,29 ----
  #define __XPATH2MEMORYMANAGER_HPP
  
  #include <algorithm>
+ #include <cstddef>
  #include <assert.h>
  
  #include <xqilla/framework/XQillaExport.hpp>
diff -crB dbxml-2.5.16_ORIG/xqilla/src/items/DatatypeFactoryTemplate.hpp dbxml-2.5.16_MODIF/xqilla/src/items/DatatypeFactoryTemplate.hpp
*** dbxml-2.5.16_ORIG/xqilla/src/items/DatatypeFactoryTemplate.hpp	2013-04-03 11:32:18.749138320 +0200
--- dbxml-2.5.16_MODIF/xqilla/src/items/DatatypeFactoryTemplate.hpp	2013-04-03 11:35:12.115141066 +0200
***************
*** 79,85 ****
    AnyAtomicType::Ptr createInstance(const XMLCh* value,
                                      const DynamicContext* context) const
    {
!     return createInstanceNoCheck(DatatypeFactoryTemplate<TYPE>::getPrimitiveTypeURI(),
                                   DatatypeFactoryTemplate<TYPE>::getPrimitiveTypeName(), value, context);
    }
  
--- 79,85 ----
    AnyAtomicType::Ptr createInstance(const XMLCh* value,
                                      const DynamicContext* context) const
    {
!     return this->createInstanceNoCheck(DatatypeFactoryTemplate<TYPE>::getPrimitiveTypeURI(),
                                   DatatypeFactoryTemplate<TYPE>::getPrimitiveTypeName(), value, context);
    }
  
