/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class xmipp_ProgTomographAlignment */

#ifndef _Included_xmipp_ProgTomographAlignment
#define _Included_xmipp_ProgTomographAlignment
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     xmipp_ProgTomographAlignment
 * Method:    storeIds
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_ProgTomographAlignment_storeIds
  (JNIEnv *, jclass);

/*
 * Class:     xmipp_ProgTomographAlignment
 * Method:    create
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_ProgTomographAlignment_create
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_ProgTomographAlignment
 * Method:    setInputFilename
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_xmipp_ProgTomographAlignment_setInputFilename
  (JNIEnv *, jobject, jstring);

/*
 * Class:     xmipp_ProgTomographAlignment
 * Method:    setRoot
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_xmipp_ProgTomographAlignment_setRoot
  (JNIEnv *, jobject, jstring);

/*
 * Class:     xmipp_ProgTomographAlignment
 * Method:    produceSideInfo
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_ProgTomographAlignment_produceSideInfo
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_ProgTomographAlignment
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_ProgTomographAlignment_destroy
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
