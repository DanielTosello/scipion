/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class xmipp_Projection */

#ifndef _Included_xmipp_Projection
#define _Included_xmipp_Projection
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     xmipp_Projection
 * Method:    storeIds
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_storeIds
  (JNIEnv *, jclass);

/*
 * Class:     xmipp_Projection
 * Method:    create
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_create
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_Projection
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_destroy
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_Projection
 * Method:    reset
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_reset
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     xmipp_Projection
 * Method:    projectVolume
 * Signature: (Lxmipp/ImageGeneric;Lxmipp/Projection;DDD)V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_projectVolume
  (JNIEnv *, jclass, jobject, jobject, jdouble, jdouble, jdouble);

/*
 * Class:     xmipp_Projection
 * Method:    entropyOtsuSegmentation
 * Signature: (Lxmipp/ImageGeneric;DZ)D
 */
JNIEXPORT jdouble JNICALL Java_xmipp_Projection_entropyOtsuSegmentation
  (JNIEnv *, jclass, jobject, jdouble, jboolean);

/*
 * Class:     xmipp_Projection
 * Method:    write
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_write
  (JNIEnv *, jobject, jstring);

/*
 * Class:     xmipp_Projection
 * Method:    getData
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_xmipp_Projection_getData__
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_Projection
 * Method:    getData
 * Signature: (JI)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_xmipp_Projection_getData__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xmipp_Projection
 * Method:    getXsize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_xmipp_Projection_getXsize
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_Projection
 * Method:    getYsize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_xmipp_Projection_getYsize
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_Projection
 * Method:    getZsize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_xmipp_Projection_getZsize
  (JNIEnv *, jobject);

/*
 * Class:     xmipp_Projection
 * Method:    printShape
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xmipp_Projection_printShape
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
