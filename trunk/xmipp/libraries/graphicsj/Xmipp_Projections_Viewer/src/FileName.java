/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FileName extends string {
  private long swigCPtr;

  protected FileName(long cPtr, boolean cMemoryOwn) {
    super(XmippDataJNI.SWIGFileNameUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FileName obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        XmippDataJNI.delete_FileName(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public FileName() {
    this(XmippDataJNI.new_FileName__SWIG_0(), true);
  }

  public FileName(String str) {
    this(XmippDataJNI.new_FileName__SWIG_1(str), true);
  }

  public FileName(FileName fn) {
    this(XmippDataJNI.new_FileName__SWIG_2(FileName.getCPtr(fn), fn), true);
  }

  public FileName(String str, int no, String ext) {
    this(XmippDataJNI.new_FileName__SWIG_3(str, no, ext), true);
  }

  public FileName(String str, int no) {
    this(XmippDataJNI.new_FileName__SWIG_4(str, no), true);
  }

  public FileName(String str, String ext) {
    this(XmippDataJNI.new_FileName__SWIG_5(str, ext), true);
  }

  public void compose(String str, int no, String ext) {
    XmippDataJNI.FileName_compose__SWIG_0(swigCPtr, this, str, no, ext);
  }

  public void compose(int no, String str) {
    XmippDataJNI.FileName_compose__SWIG_1(swigCPtr, this, no, str);
  }

  public boolean isInStack() {
    return XmippDataJNI.FileName_isInStack(swigCPtr, this);
  }

  public void decompose(SWIGTYPE_p_int no, string str) {
    XmippDataJNI.FileName_decompose(swigCPtr, this, SWIGTYPE_p_int.getCPtr(no), string.getCPtr(str), str);
  }

  public FileName get_root() {
    return new FileName(XmippDataJNI.FileName_get_root(swigCPtr, this), true);
  }

  public FileName to_lowercase() {
    return new FileName(XmippDataJNI.FileName_to_lowercase(swigCPtr, this), true);
  }

  public FileName to_uppercase() {
    return new FileName(XmippDataJNI.FileName_to_uppercase(swigCPtr, this), true);
  }

  public boolean contains(String str) {
    return XmippDataJNI.FileName_contains(swigCPtr, this, str);
  }

  public FileName before_first_of(String str) {
    return new FileName(XmippDataJNI.FileName_before_first_of(swigCPtr, this, str), true);
  }

  public FileName before_last_of(String str) {
    return new FileName(XmippDataJNI.FileName_before_last_of(swigCPtr, this, str), true);
  }

  public FileName after_first_of(String str) {
    return new FileName(XmippDataJNI.FileName_after_first_of(swigCPtr, this, str), true);
  }

  public FileName after_last_of(String str) {
    return new FileName(XmippDataJNI.FileName_after_last_of(swigCPtr, this, str), true);
  }

  public String get_baseName() {
    return XmippDataJNI.FileName_get_baseName(swigCPtr, this);
  }

  public int get_number() {
    return XmippDataJNI.FileName_get_number(swigCPtr, this);
  }

  public String get_extension() {
    return XmippDataJNI.FileName_get_extension(swigCPtr, this);
  }

  public void init_random(int length) {
    XmippDataJNI.FileName_init_random(swigCPtr, this, length);
  }

  public FileName add_prefix(String prefix) {
    return new FileName(XmippDataJNI.FileName_add_prefix(swigCPtr, this, prefix), true);
  }

  public FileName add_extension(String ext) {
    return new FileName(XmippDataJNI.FileName_add_extension(swigCPtr, this, ext), true);
  }

  public FileName without_extension() {
    return new FileName(XmippDataJNI.FileName_without_extension(swigCPtr, this), true);
  }

  public FileName without_root() {
    return new FileName(XmippDataJNI.FileName_without_root(swigCPtr, this), true);
  }

  public FileName insert_before_extension(String str) {
    return new FileName(XmippDataJNI.FileName_insert_before_extension(swigCPtr, this, str), true);
  }

  public FileName remove_extension(String ext) {
    return new FileName(XmippDataJNI.FileName_remove_extension(swigCPtr, this, ext), true);
  }

  public FileName remove_all_extensions() {
    return new FileName(XmippDataJNI.FileName_remove_all_extensions(swigCPtr, this), true);
  }

  public FileName get_file_format() {
    return new FileName(XmippDataJNI.FileName_get_file_format(swigCPtr, this), true);
  }

  public FileName remove_file_format() {
    return new FileName(XmippDataJNI.FileName_remove_file_format(swigCPtr, this), true);
  }

  public boolean isMetaData() {
    return XmippDataJNI.FileName_isMetaData(swigCPtr, this);
  }

  public FileName substitute_extension(String ext1, String ext2) {
    return new FileName(XmippDataJNI.FileName_substitute_extension(swigCPtr, this, ext1, ext2), true);
  }

  public FileName without(String str) {
    return new FileName(XmippDataJNI.FileName_without(swigCPtr, this, str), true);
  }

  public FileName remove_until_prefix(String str) {
    return new FileName(XmippDataJNI.FileName_remove_until_prefix(swigCPtr, this, str), true);
  }

  public FileName remove_directories(int keep) {
    return new FileName(XmippDataJNI.FileName_remove_directories__SWIG_0(swigCPtr, this, keep), true);
  }

  public FileName remove_directories() {
    return new FileName(XmippDataJNI.FileName_remove_directories__SWIG_1(swigCPtr, this), true);
  }

}
