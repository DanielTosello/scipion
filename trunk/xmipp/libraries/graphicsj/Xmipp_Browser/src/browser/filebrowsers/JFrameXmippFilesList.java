/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameXmippFilesList.java
 *
 * Created on Aug 2, 2011, 5:56:47 PM
 */
package browser.filebrowsers;

import browser.ICONS_MANAGER;
import browser.LABELS;
import ij.IJ;
import java.awt.BorderLayout;
import java.io.OutputStreamWriter;
import java.net.InetAddress;
import java.net.Socket;

/**
 *
 * @author Juanjo Vega
 */
public class JFrameXmippFilesList extends javax.swing.JFrame {

    final static String EOT = "__END__";
    JPanelXmippBrowser panelXmippBrowser;
    int port;

    /** Creates new form JFrameXmippFilesList */
    public JFrameXmippFilesList(String directory, int port) {
        this(directory, port, false);
    }

    public JFrameXmippFilesList(String directory, int port, String expression) {
        this(directory, port, expression, false);
    }

    public JFrameXmippFilesList(String directory, int port, boolean singleSelection) {
        this(directory, port, "", singleSelection);
    }

    public JFrameXmippFilesList(String directory, int port, String expression, boolean singleSelection) {
        super(LABELS.TITLE_XMIPP_FILE_SELECTOR);

        this.port = port;

        initComponents();

        panelXmippBrowser = new JPanelXmippBrowser(directory, expression);
        panelXmippBrowser.setSingleSelection(singleSelection);

        add(panelXmippBrowser, BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }

    protected void button1Clicked() {
        if (sendSelectedFiles()) {
            dispose();
        }
    }

    protected boolean sendSelectedFiles() {
        try {
            System.out.println(" -- Client Started --- ");

            System.out.println(" -- Client: Connecting... ");
            Socket socket = new Socket(InetAddress.getByName("127.0.0.1"), port);

            System.out.println(" -- Client: Connected to: "
                    + socket.getInetAddress().getHostName());

            // Get streams.
            OutputStreamWriter output = new OutputStreamWriter(socket.getOutputStream());
            output.flush();

            //ObjectInputStream input = new ObjectInputStream(socket.getInputStream());
            Object items[] = panelXmippBrowser.getSelectedValues();

            for (int i = 0; i < items.length; i++) {
                output.write(items[i].toString() + "\n");
                System.out.println(" -- Client: Message " + (i + 1) + "/" + items.length + " sent... ");
            }

            output.write(EOT);
            output.flush();
            System.out.println(" -- Client: End of transmission. ");

            // Closes connection.
            //input.close();
            output.close();
            socket.close();

            return true;
        } catch (Exception ex) {
            IJ.error(ex.getMessage());
        }

        return false;
    }

    protected void button2Clicked() {
        dispose();
    }

    protected void goParent() {
        panelXmippBrowser.goParent();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar = new javax.swing.JToolBar();
        jbParent = new javax.swing.JButton();
        jbRefresh = new javax.swing.JButton();
        jpButtons = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        jToolBar.setFloatable(false);
        jToolBar.setRollover(true);

        jbParent.setIcon(ICONS_MANAGER.PARENT_DIRECTORY);
        jbParent.setText(LABELS.BUTTON_PARENT_DIRECTORY);
        jbParent.setFocusable(false);
        jbParent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbParent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbParentActionPerformed(evt);
            }
        });
        jToolBar.add(jbParent);

        jbRefresh.setIcon(ICONS_MANAGER.REFRESH_DIRECTORY);
        jbRefresh.setText(LABELS.BUTTON_REFRESH_DIRECTORY);
        jbRefresh.setFocusable(false);
        jbRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefreshActionPerformed(evt);
            }
        });
        jToolBar.add(jbRefresh);

        getContentPane().add(jToolBar, java.awt.BorderLayout.NORTH);

        jbOk.setText(LABELS.BUTTON_OK);
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jpButtons.add(jbOk);

        jbCancel.setText(LABELS.BUTTON_CANCEL);
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jpButtons.add(jbCancel);

        getContentPane().add(jpButtons, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefreshActionPerformed
        panelXmippBrowser.refreshCurrentDirectory();
}//GEN-LAST:event_jbRefreshActionPerformed

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        button1Clicked();
}//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        button2Clicked();
}//GEN-LAST:event_jbCancelActionPerformed

    private void jbParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbParentActionPerformed
        goParent();
    }//GEN-LAST:event_jbParentActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JToolBar jToolBar;
    javax.swing.JButton jbCancel;
    javax.swing.JButton jbOk;
    javax.swing.JButton jbParent;
    javax.swing.JButton jbRefresh;
    private javax.swing.JPanel jpButtons;
    // End of variables declaration//GEN-END:variables
}
