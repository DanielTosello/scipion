/***************************************************************************
 *
 * Authors:     Carlos Oscar S. Sorzano (coss@cnb.uam.es)
 *
 * Unidad de  Bioinformatica of Centro Nacional de Biotecnologia , CSIC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or   
 * (at your option) any later version.                                 
 *                                                                     
 * This program is distributed in the hope that it will be useful,     
 * but WITHOUT ANY WARRANTY; without even the implied warranty of      
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       
 * GNU General Public License for more details.                        
 *                                                                     
 * You should have received a copy of the GNU General Public License   
 * along with this program; if not, write to the Free Software         
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA            
 * 02111-1307  USA                                                     
 *                                                                     
 *  All comments concerning this program package may be sent to the    
 *  e-mail address 'xmipp@cnb.uam.es'                                  
 ***************************************************************************/

#include <XmippData/xmippArgs.hh>
#include <XmippData/xmippMicrograph.hh>
void Usage();

int main (int argc, char **argv) {
   Micrograph     M_in,  M_out;
   FileName       fn_in, fn_out;
   int            Ypdim, Xpdim;
   int            i0, j0;

   // Get command line parameters ------------------------------------------
   try {
      int i=position_param(argc,argv,"-size");
      if (i==-1)
         REPORT_ERROR(1,"-size is missing");
      if (i+2>=argc)
         REPORT_ERROR(1,"Not enough parameters after -size");
      Xpdim=AtoI(argv[i+1]);
      Ypdim=AtoI(argv[i+2]);
      i=position_param(argc,argv,"-top_left_corner");
      if (i+2>=argc)
         REPORT_ERROR(1,"Not enough parameters after -top_left_corner");
      if (i!=-1) {
         j0=AtoI(argv[i+1]);
         i0=AtoI(argv[i+2]);
      } else i0=j0=0;
      fn_in  = get_param(argc, argv, "-i");
      fn_out = get_param(argc, argv, "-o");
   } catch (Xmipp_error XE) {Usage(); exit(1);}

   // Main program ---------------------------------------------------------
   try {
      // Read input micrograph
      M_in.open_micrograph(fn_in);
      int bits=M_in.depth();
      int Ydim, Xdim;
      M_in.size(Xdim, Ydim);
      if (Xdim<Xpdim || Ydim<Ypdim)
         REPORT_ERROR(1,"Window_Micrograph: Cannot make micrograph bigger\n");
      

      // Create output image
      create_empty_file(fn_out,Ypdim*Xpdim*bits/8);

      ofstream fh_inf;
      fh_inf.open((fn_out+".inf").c_str());
      if (!fh_inf)
         REPORT_ERROR(1,(string)"Window_Micrograph: Cannot open "+fn_out+
            ".inf");
      fh_inf << "# Generated by Downsample\n";
      fh_inf << "# Original file: " << fn_in << endl;
      fh_inf << "# Image width\n";
      fh_inf << "Xdim=" << Xpdim << endl;
      fh_inf << "# Image length\n";
      fh_inf << "Ydim=" << Ypdim << endl;
      fh_inf << "# Pixel depth\n";
      fh_inf << "bitspersample=" << bits << endl;
      fh_inf.close();
      
      // Really window
      M_out.open_micrograph(fn_out);
      for (int i=i0; i<Ypdim; i++)
          for (int j=j0; j<Xpdim; j++)
	      M_out.set_val(j,i,M_in(j,i));
      
      // Close
      M_out.close_micrograph();
      M_in.close_micrograph();
   } catch (Xmipp_error XE) {cerr << XE; exit(1);}
   exit(0);
}

void Usage() {
    cout << "Purpose:\n"
         << "    Reduce size of input image\n"
         << "Usage: window_micrograph\n"
         << " -i <input_micrograph>            : Either 8 or 16 bits\n"
         << " -o <output_micrograph>           : It will be rewritten\n"
         << " -size <new Xdim> <new Ydim>      : In pixels\n"
         << "[-top_left_corner <X=0,Y=0>]      : In pixels\n"
         << endl;
}

/* Colimate menu =========================================================== */
/*Colimate:
   PROGRAM Window_micrograph {
      url="http://www.cnb.uam.es/~bioinfo/NewXmipp/Applications/Src/Window_micrograph/Help/window_micrograph.html";
      help="Cuts a raw microgragh to a desired size. This is needed when
            marking in a downsampled image and cutting in the normal
            micrograph. The respective sizes must be multiples of each
            other if a right particle selection is to be done";
      OPEN MENU Window_micrograph;
      COMMAND LINES {
         + usual: xmipp_window_micrograph -i $FILEIN -o $FILEOUT
                     -size $XDIM $YDIM
      }
      PARAMETER DEFINITIONS {
         $FILEIN {
            label="Input micrograph";
            type=file existing;
         }
         $FILEOUT {
            label="Output micrograph";
            type=file;
         }
         $XDIM {
            label="Output X dim";
            type=natural;
         }
         $YDIM {
            label="Output Y dim";
            type=natural;
         }
      }
   }
   MENU Window_micrograph {
      "I/O parameters"
      $FILEIN
      $FILEOUT
      $XDIM
      $YDIM
   }
*/
