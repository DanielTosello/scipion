# This script reads a PDB file and creates a .descr file that
# can be used with create_phantom, project, etc. Each atom is replaced
# by a blob. Hidrogen atoms are not counted

# Get input parameters -----------------------------------------------------
$argc = @ARGV;
if ($argc < 2) {
   printf "Usage: PDB2descr \n";
   printf "          <in_file.pdb>          : Input PDB file\n";
   printf "          <out_file.descr>       : Output Xmipp file\n";
   printf "         [<sampling_rate=1>]     : Sampling rate Angstroms/pixel\n";
   printf "         [<blob.radius=6>        : Blob radius\n";
   printf "          <blob.alpha=3.6>       : Blob alpha\n";
   printf "          <blob.order=2.0>]\n";
   exit(1);
}

if ($argc>=3) {
   $sampling_rate=$ARGV[2];
} else {
   $sampling_rate=1.0;
}

if ($argc==6) {
   $radius = $ARGV[3];
   $alpha = $ARGV[4];
   $order = $ARGV[5];
} else {
   $radius = 6.0;
   $alpha = 3.6;
   $order = 2.0;
}

# Compute molecule center --------------------------------------------------
open(INFILE, "<$ARGV[0]");

$X_center=0.;
$Y_center=0.;
$Z_center=0.;
$atom_number=0.;

while ( $tmp = <INFILE> ) {
  @separated  = split (/ +/,$tmp);
  if ($separated[0] =~ ATOM && $separated[2] !~ H) {   
	$atom_number++;
        $X_center += substr( $tmp, 30, 8 );
        $Y_center += substr( $tmp, 38, 8 );
        $Z_center += substr( $tmp, 46, 8 );
	      
  }
}
seek(INFILE,0,0);

$X_center /= $atom_number;      
$Y_center /= $atom_number;      
$Z_center /= $atom_number;

# Compute maximum distance from center -------------------------------------
$max_dist = 0;
while ( $tmp = <INFILE> ) {
  @separated  = split (/ +/,$tmp);
  if ($separated[0] =~ ATOM && $separated[2] !~ H) {   
        $X = substr( $tmp, 30, 8 );
        $Y = substr( $tmp, 38, 8 );
        $Z = substr( $tmp, 46, 8 );
        $dist=sqrt(($X-$X_center)*($X-$X_center)+
	           ($Y-$Y_center)*($Y-$Y_center)+
                   ($Z-$Z_center)*($Z-$Z_center));
        if ($dist>$max_dist) {$max_dist=$dist;}
  }
}
seek(INFILE,0,0);
$max_dist=int(2*$max_dist+0.5)+1;

# Write Xmipp file ---------------------------------------------------------
# Write header
open(OUTFILE,">$ARGV[1]");
printf OUTFILE "#Phantom Xdim Ydim Zdim Background_density scale\n";    
printf OUTFILE "          %d  %d  %d           0.0    %f\n",
   $max_dist,$max_dist,$max_dist,1.0/$sampling_rate;
printf OUTFILE "#Type <+/=> <den>    <x0>     <y0>     <z0>    <radius>  <alpha>   <order>\n";    
printf OUTFILE "#\n";    

# Write all atoms
while ( $tmp = <INFILE> ) {
  @separated  = split (/ +/,$tmp);
  if ($separated[0]  =~ATOM && $separated[2] !~ H) {   
     printf OUTFILE "blo    +     1.0 ";
     printf OUTFILE "% .2f ", substr( $tmp, 30, 8 ) - $X_center;
     printf OUTFILE "% .2f ", substr( $tmp, 38, 8 ) - $Y_center;
     printf OUTFILE "% .2f ", substr( $tmp, 46, 8 ) - $Z_center;
     printf OUTFILE "$radius $alpha $order\n";
  }
}
close(INFILE);
close(OUTFILE);
